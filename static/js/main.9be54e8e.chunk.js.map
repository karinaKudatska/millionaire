{"version":3,"sources":["images/hand.png","images/done.png","components/GameStart/GameStart.jsx","components/Popup/Popup.jsx","components/BurgerButton/BurgerButton.jsx","components/GamePage/GamePage.jsx","components/GameOver/GameOver.jsx","App.jsx","index.js"],"names":["module","exports","GameStart","setGameStart","setGamePage","className","src","hand","alt","type","onClick","Popup","prize","done","Burger","active","setActive","ClassNames","burger__active","GamePage","chooseOption","currentPrize","currentTask","prizes","tasks","popup","letters","useState","isBurgerActive","setisBurgerActive","question","options","map","option","index","key","answer","GameOver","tryAgain","App","gameStart","gamePage","gameOver","setGameOver","setCurrentTask","setCurrentPrize","setPopup","length","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9be54e8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hand.f8c75481.png\";","module.exports = __webpack_public_path__ + \"static/media/done.b9a10378.png\";","import React from 'react';\nimport './GameStart.scss';\nimport PropTypes from 'prop-types';\nimport hand from '../../images/hand.png';\n\nfunction GameStart({ setGameStart, setGamePage }) {\n  return (\n    <div className=\"game-start\">\n      <div className=\"game-start__left-container\">\n        <img className=\"game-start__image\" src={hand} alt=\"hand\" />\n      </div>\n      <div className=\"game-start__right-container\">\n        <h1 className=\"game-start__title\">Who wants to be aÂ millionaire?</h1>\n        <button\n          className=\"game-start__button\"\n          type=\"button\"\n          onClick={() => {\n            setGamePage(true);\n            setGameStart(false);\n          }}\n        >\n          Start\n        </button>\n      </div>\n    </div>\n  );\n}\n\nGameStart.propTypes = {\n  setGameStart: PropTypes.func.isRequired,\n  setGamePage: PropTypes.func.isRequired,\n};\n\nexport default GameStart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport done from '../../images/done.png';\nimport './Popup.scss';\n\nfunction Popup({ prize }) {\n  return (\n    <div className=\"popup\">\n      <img className=\"popup__image\" src={done} alt=\"Good job!\" />\n      <h1 className=\"popup__title\">{`You won ${prize}!`}</h1>\n    </div>\n  );\n}\n\nPopup.propTypes = {\n  prize: PropTypes.string.isRequired,\n};\n\nexport default Popup;\n","import React from 'react';\nimport ClassNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './BurgerButton.scss';\n\nfunction Burger({ active, setActive }) {\n  return (\n    <button\n      type=\"button\"\n      className={ClassNames(\n        'burger',\n        { burger__active: active },\n      )}\n      onClick={() => setActive(!active)}\n    >\n      .\n    </button>\n  );\n}\n\nBurger.propTypes = {\n  active: PropTypes.bool.isRequired,\n  setActive: PropTypes.func.isRequired,\n};\n\nexport default Burger;\n","import React, { useState } from 'react';\nimport ClassNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Popup from '../Popup/Popup';\nimport Burger from '../BurgerButton/BurgerButton';\nimport './GamePage.scss';\n\nfunction GamePage({\n  chooseOption,\n  currentPrize,\n  currentTask,\n  prizes,\n  tasks,\n  popup,\n}) {\n  const letters = ['A', 'B', 'C', 'D'];\n  const [isBurgerActive, setisBurgerActive] = useState(false);\n\n  return (\n    <div className=\"game-page\">\n      <Burger\n        active={isBurgerActive}\n        setActive={setisBurgerActive}\n      />\n      <div className={ClassNames(\n        'game-page__task',\n        { 'game-page__task--closed': isBurgerActive },\n      )}\n      >\n        <h2 className=\"game-page__question\">{tasks[currentTask].question}</h2>\n        <ul className=\"game-page__options\">\n          {tasks[currentTask].options.map((option, index) => (\n            <li\n              key={option}\n              className=\"game-page__option-wrapper\"\n            >\n              <button\n                className=\"game-page__option\"\n                type=\"button\"\n                onClick={() => chooseOption(\n                  option, tasks[currentTask].answer,\n                )}\n              >\n                <span className=\"game-page__option-letter\">{letters[index]}</span>\n                {option}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <ul className={ClassNames(\n        'game-page__prizes',\n        { 'game-page__prizes--opened': isBurgerActive },\n      )}\n      >\n        {prizes.map((prize, index) => (\n          <li\n            key={prize}\n            className={ClassNames({\n              'game-page__prize': true,\n              'game-page__prize--active': index === currentPrize,\n              'game-page__prize--unactive': index < currentPrize,\n            })}\n          >\n            {prize}\n          </li>\n        ))}\n      </ul>\n      {popup && (\n        <Popup\n          prize={prizes[currentPrize - 1]}\n        />\n      )}\n    </div>\n  );\n}\n\nGamePage.propTypes = {\n  tasks: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      question: PropTypes.string.isRequired,\n      options: PropTypes.arrayOf(\n        PropTypes.string.isRequired,\n      ).isRequired,\n      answer: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  prizes: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  currentTask: PropTypes.number.isRequired,\n  currentPrize: PropTypes.number.isRequired,\n  chooseOption: PropTypes.func.isRequired,\n  popup: PropTypes.bool.isRequired,\n};\n\nexport default GamePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './GameOver.scss';\nimport hand from '../../images/hand.png';\n\nfunction GameOver({ prizes, currentPrize, tryAgain }) {\n  return (\n    <div className=\"game-over\">\n      <div className=\"game-over__left-container\">\n\n        <img className=\"game-over__image\" src={hand} alt=\"hand\" />\n      </div>\n      <div className=\"game-over__right-container\">\n        <h1 className=\"game-over__title\">Total score:</h1>\n        <span className=\"game-over__result\">\n          {`${prizes[currentPrize - 1] || '$0'} earned`}\n        </span>\n        <button\n          className=\"game-over__button\"\n          type=\"button\"\n          onClick={tryAgain}\n        >\n          Try again\n        </button>\n      </div>\n    </div>\n  );\n}\n\nGameOver.propTypes = {\n  prizes: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  currentPrize: PropTypes.number.isRequired,\n  tryAgain: PropTypes.func.isRequired,\n};\n\nexport default GameOver;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport tasks from './api/tasks.json';\nimport { prizes } from './api/prizes.json';\nimport GameStart from './components/GameStart/GameStart';\nimport GamePage from './components/GamePage/GamePage';\nimport GameOver from './components/GameOver/GameOver';\n\nfunction App() {\n  const [gameStart, setGameStart] = useState(true);\n  const [gamePage, setGamePage] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [currentTask, setCurrentTask] = useState(0);\n  const [currentPrize, setCurrentPrize] = useState(0);\n  const [popup, setPopup] = useState(false);\n\n  const chooseOption = (option, answer) => {\n    if (currentTask < tasks.length && option === answer) {\n      if (currentTask !== tasks.length - 1) {\n        setPopup(true);\n        setTimeout(() => setPopup(false), 1000);\n        setCurrentTask(currentTask + 1);\n        setCurrentPrize(currentPrize + 1);\n      } else {\n        setGameOver(true);\n        setGamePage(false);\n        setCurrentTask(0);\n        setCurrentPrize(currentPrize + 1);\n      }\n    } else {\n      setGameOver(true);\n      setGamePage(false);\n      setCurrentTask(0);\n    }\n  };\n\n  const tryAgain = () => {\n    setGamePage(true);\n    setGameOver(false);\n    setCurrentPrize(0);\n  };\n\n  return (\n    <div className=\"App\">\n      {gameStart && (\n        <GameStart\n          setGameStart={setGameStart}\n          setGamePage={setGamePage}\n        />\n      )}\n      {gamePage && (\n        <GamePage\n          chooseOption={chooseOption}\n          currentTask={currentTask}\n          prizes={prizes}\n          currentPrize={currentPrize}\n          tasks={tasks}\n          popup={popup}\n        />\n      )}\n      {gameOver && (\n        <GameOver\n          prizes={prizes}\n          currentPrize={currentPrize}\n          tryAgain={tryAgain}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}