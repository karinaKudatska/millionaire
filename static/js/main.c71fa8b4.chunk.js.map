{"version":3,"sources":["images/hand.png","images/done.png","components/GameStart/GameStart.jsx","components/Popup/Popup.jsx","components/BurgerButton/BurgerButton.jsx","components/GamePage/GamePage.jsx","components/GameOver/GameOver.jsx","App.js","index.js"],"names":["module","exports","GameStart","setGameStart","setGamePage","className","src","hand","alt","type","onClick","Popup","prize","done","Burger","active","setActive","ClassNames","GamePage","chooseOption","currentPrize","currentTask","prizes","tasks","popup","letters","useState","isBurgerActive","setisBurgerActive","question","options","map","option","index","key","answer","GameOver","tryAgain","App","gameStart","gamePage","gameOver","setGameOver","setCurrentTask","setCurrentPrize","setPopup","length","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,kC,gnECA3CD,EAAOC,QAAU,IAA0B,kC,8QC4B5BC,MAxBf,YAAmD,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,YAEjC,OACE,yBAAKC,UAAU,cACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,oBAAoBC,IAAKC,IAAMC,IAAI,UAEpD,yBAAKH,UAAU,+BACb,wBAAIA,UAAU,qBAAd,qCACA,4BACEA,UAAU,qBACVI,KAAK,SACLC,QAAS,WACTN,GAAY,GACZD,GAAa,KALf,Y,sCCEOQ,MAXf,YAA2B,IAAVC,EAAS,EAATA,MACf,OACE,yBAAKP,UAAU,SACb,yBAAKA,UAAU,eAAeC,IAAKO,IAAML,IAAI,cAC7C,wBAAIH,UAAU,gBAAd,WAAsCO,EAAtC,O,MCSSE,MAbf,YAAwC,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,UACxB,OACE,4BACEP,KAAK,SACLJ,UAAWY,IACT,SACA,CAAE,eAAkBF,IAEtBL,QAAS,kBAAMM,GAAWD,O,MCgDjBG,MAtDf,YAAqF,IAAjEC,EAAgE,EAAhEA,aAAcC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MACpEC,EAAU,CAAC,IAAK,IAAK,IAAK,KADkD,EAEtCC,oBAAS,GAF6B,mBAE3EC,EAF2E,KAE3DC,EAF2D,KAIlF,OACE,yBAAKvB,UAAU,aACb,kBAAC,EAAD,CACEU,OAAQY,EACRX,UAAWY,IAEb,yBAAKvB,UAAWY,IACd,kBACA,CAAE,0BAA2BU,KAE7B,wBAAItB,UAAU,uBAAuBkB,EAAMF,GAAaQ,UACxD,wBAAIxB,UAAU,sBACXkB,EAAMF,GAAaS,QAAQC,KAAI,SAACC,EAAQC,GAAT,OAC9B,wBACEC,IAAKD,EACL5B,UAAU,oBACVK,QAAS,kBAAMS,EAAaa,EAAQT,EAAMF,GAAac,UAEvD,0BAAM9B,UAAU,4BAA4BoB,EAAQQ,IACnDD,QAKT,wBAAI3B,UAAWY,IACb,oBACA,CAAE,4BAA6BU,KAE5BL,EAAOS,KAAI,SAACnB,EAAOqB,GAAR,OACV,wBACEC,IAAKD,EACL5B,UAAWY,IAAW,CACpB,oBAAoB,EACpB,2BAA4BgB,IAAUb,EACtC,6BAA8Ba,EAAQb,KAGvCR,OAIRY,GACC,kBAAC,EAAD,CACEZ,MAAOU,EAAOF,EAAe,O,MC3BxBgB,MAtBf,YAAuD,IAAnCd,EAAkC,EAAlCA,OAAQF,EAA0B,EAA1BA,aAAciB,EAAY,EAAZA,SACxC,OACE,yBAAKhC,UAAU,aACb,yBAAKA,UAAU,6BAEb,yBAAKA,UAAU,mBAAmBC,IAAKC,IAAMC,IAAI,UAEnD,yBAAKH,UAAU,8BACb,wBAAIA,UAAU,oBAAd,gBACA,0BAAMA,UAAU,qBAAqBiB,EAAOF,EAAe,IAAM,KAAjE,WACA,4BACEf,UAAU,oBACVI,KAAK,SACLC,QAAS2B,GAHX,gBC0DOC,MAhEf,WAAgB,IAAD,EACqBZ,oBAAS,GAD9B,mBACNa,EADM,KACKpC,EADL,OAEmBuB,oBAAS,GAF5B,mBAENc,EAFM,KAEIpC,EAFJ,OAGmBsB,oBAAS,GAH5B,mBAGNe,EAHM,KAGIC,EAHJ,OAKyBhB,mBAAS,GALlC,mBAKNL,EALM,KAKOsB,EALP,OAM2BjB,mBAAS,GANpC,mBAMNN,EANM,KAMQwB,EANR,OAOalB,oBAAS,GAPtB,mBAONF,EAPM,KAOCqB,EAPD,KAmCb,OACE,yBAAKxC,UAAU,OACZkC,GACC,kBAAC,EAAD,CACEpC,aAAcA,EACdC,YAAaA,IAGhBoC,GACC,kBAAC,EAAD,CACErB,aApCa,SAACa,EAAQG,GACxBd,EAAcE,EAAMuB,QAAUd,IAAWG,EACvCd,IAAgBE,EAAMuB,OAAS,GACjCD,GAAS,GACTE,YAAW,kBAAMF,GAAS,KAAQ,KAClCF,EAAetB,EAAc,GAC7BuB,EAAgBxB,EAAe,KAE/BsB,GAAY,GACZtC,GAAY,GACZuC,EAAe,GACfC,EAAgBxB,EAAe,KAGjCsB,GAAY,GACZtC,GAAY,GACZuC,EAAe,KAqBXtB,YAAaA,EACbC,OAAQA,IACRF,aAAcA,EACdG,MAAOA,EACPC,MAAOA,IAGViB,GACC,kBAAC,EAAD,CACEnB,OAAQA,IACRF,aAAcA,EACdiB,SA5BS,WACfjC,GAAY,GACZsC,GAAY,GACZE,EAAgB,QCpCpBI,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.c71fa8b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hand.f8c75481.png\";","module.exports = __webpack_public_path__ + \"static/media/done.b9a10378.png\";","import React from 'react';\r\nimport './GameStart.scss';\r\nimport hand from '../../images/hand.png';\r\n\r\nfunction GameStart({ setGameStart, setGamePage }) {\r\n\r\n  return (\r\n    <div className=\"game-start\">\r\n      <div className=\"game-start__left-container\">\r\n        <img className=\"game-start__image\" src={hand} alt=\"hand\" />\r\n      </div>\r\n      <div className=\"game-start__right-container\">\r\n        <h1 className=\"game-start__title\">Who wants to be aÂ millionaire?</h1>\r\n        <button \r\n          className=\"game-start__button\" \r\n          type=\"button\"\r\n          onClick={() => {\r\n          setGamePage(true);\r\n          setGameStart(false);\r\n        }}\r\n        >\r\n          Start\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameStart;","import React  from 'react';\r\nimport done from '../../images/done.png';\r\nimport './Popup.scss';\r\n\r\nfunction Popup({ prize }) {\r\n  return (\r\n    <div className=\"popup\">\r\n      <img className=\"popup__image\" src={done} alt=\"Good job!\" />\r\n      <h1 className=\"popup__title\">You won {prize}!</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Popup;","import React from 'react';\r\nimport ClassNames from 'classnames';\r\nimport './BurgerButton.scss';\r\n\r\nfunction Burger({ active, setActive }) {\r\n  return (\r\n    <button \r\n      type=\"button\" \r\n      className={ClassNames(\r\n        'burger',\r\n        { 'burger__active': active }\r\n      )}\r\n      onClick={() => setActive(!active)}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Burger;\r\n","import React, { useState } from 'react';\r\nimport ClassNames from 'classnames';\r\nimport Popup from '../Popup/Popup';\r\nimport Burger from '../BurgerButton/BurgerButton';\r\nimport './GamePage.scss';\r\n\r\nfunction GamePage({ chooseOption, currentPrize, currentTask, prizes, tasks, popup}) {\r\n  const letters = [\"A\", \"B\", \"C\", \"D\"];\r\n  const [isBurgerActive, setisBurgerActive] = useState(false);\r\n\r\n  return (\r\n    <div className=\"game-page\">\r\n      <Burger \r\n        active={isBurgerActive}\r\n        setActive={setisBurgerActive}\r\n      />\r\n      <div className={ClassNames(\r\n        \"game-page__task\",\r\n        { \"game-page__task--closed\": isBurgerActive }\r\n      )}>\r\n        <h2 className=\"game-page__question\">{tasks[currentTask].question}</h2>\r\n        <ul className=\"game-page__options\">\r\n          {tasks[currentTask].options.map((option, index) => (\r\n            <li\r\n              key={index}\r\n              className=\"game-page__option\"\r\n              onClick={() => chooseOption(option, tasks[currentTask].answer)}\r\n            >\r\n              <span className=\"game-page__option-letter\">{letters[index]}</span>\r\n              {option}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <ul className={ClassNames(\r\n        \"game-page__prizes\",\r\n        { \"game-page__prizes--opened\": isBurgerActive }\r\n      )}>\r\n          {prizes.map((prize, index) => (\r\n            <li \r\n              key={index}\r\n              className={ClassNames({\r\n                \"game-page__prize\": true,\r\n                \"game-page__prize--active\": index === currentPrize,\r\n                \"game-page__prize--unactive\": index < currentPrize,\r\n              })}\r\n            >\r\n              {prize}\r\n            </li>\r\n          ))}\r\n      </ul>\r\n      {popup && (\r\n        <Popup \r\n          prize={prizes[currentPrize - 1]}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GamePage;","import React from 'react';\r\nimport './GameOver.scss';\r\nimport hand from '../../images/hand.png';\r\n\r\nfunction GameOver({ prizes, currentPrize, tryAgain }) {\r\n  return (\r\n    <div className=\"game-over\">\r\n      <div className=\"game-over__left-container\">\r\n\r\n        <img className=\"game-over__image\" src={hand} alt=\"hand\"></img>\r\n      </div>\r\n      <div className=\"game-over__right-container\">\r\n        <h1 className=\"game-over__title\">Total score:</h1>\r\n        <span className=\"game-over__result\">{prizes[currentPrize - 1] || '$0'} earned</span>\r\n        <button \r\n          className=\"game-over__button\" \r\n          type=\"button\"\r\n          onClick={tryAgain}\r\n        >\r\n          Try again\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameOver;","import React, { useState } from 'react';\nimport './App.scss';\nimport tasks from './api/tasks.json';\nimport { prizes } from './api/prizes.json';\nimport GameStart from './components/GameStart/GameStart';\nimport GamePage from './components/GamePage/GamePage';\nimport GameOver from './components/GameOver/GameOver';\n\nfunction App() {\n  const [gameStart, setGameStart] = useState(true);\n  const [gamePage, setGamePage] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [currentTask, setCurrentTask] = useState(0);\n  const [currentPrize, setCurrentPrize] = useState(0);\n  const [popup, setPopup] = useState(false);\n\n  const chooseOption = (option, answer) => {\n    if (currentTask < tasks.length && option === answer) {\n      if (currentTask !== tasks.length - 1) {\n        setPopup(true);\n        setTimeout(() => setPopup(false), 1000);\n        setCurrentTask(currentTask + 1);\n        setCurrentPrize(currentPrize + 1);\n      } else {\n        setGameOver(true);\n        setGamePage(false);\n        setCurrentTask(0);\n        setCurrentPrize(currentPrize + 1)\n      }\n    } else {\n      setGameOver(true);\n      setGamePage(false);\n      setCurrentTask(0);\n    }\n  }\n\n  const tryAgain = () => {\n    setGamePage(true);\n    setGameOver(false);\n    setCurrentPrize(0);\n  }\n\n  return (\n    <div className=\"App\">\n      {gameStart && (\n        <GameStart \n          setGameStart={setGameStart}\n          setGamePage={setGamePage}\n        />\n      )}\n      {gamePage && (\n        <GamePage \n          chooseOption={chooseOption}\n          currentTask={currentTask}\n          prizes={prizes}\n          currentPrize={currentPrize}\n          tasks={tasks}\n          popup={popup}\n        />\n      )}\n      {gameOver && (\n        <GameOver \n          prizes={prizes}\n          currentPrize={currentPrize}\n          tryAgain={tryAgain}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}