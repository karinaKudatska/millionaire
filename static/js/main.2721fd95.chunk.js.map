{"version":3,"sources":["images/hand.png","images/done.png","components/Game.jsx","App.js","index.js"],"names":["module","exports","Game","useState","gameStart","setGameStart","gameProcess","setGameProcess","currentTask","setCurrentTask","prizes","length","currentPrize","setCurrentPrize","gameOver","setGameOver","popup","setPopup","letters","className","src","hand","alt","type","onClick","tasks","question","options","map","option","index","answer","setTimeout","chooseOption","prize","key","ClassNames","done","App","ReactDOM","render","document","getElementById"],"mappings":"ioFAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,sOC6H5BC,MArHf,WAAiB,IAAD,EACoBC,oBAAS,GAD7B,mBACPC,EADO,KACIC,EADJ,OAEwBF,oBAAS,GAFjC,mBAEPG,EAFO,KAEMC,EAFN,OAGwBJ,mBAAS,GAHjC,mBAGPK,EAHO,KAGMC,EAHN,OAI0BN,mBAASO,IAAOC,OAAO,GAJjD,mBAIPC,EAJO,KAIOC,EAJP,OAKkBV,oBAAS,GAL3B,mBAKPW,EALO,KAKGC,EALH,OAMYZ,oBAAS,GANrB,mBAMPa,EANO,KAMAC,EANA,KAORC,EAAU,CAAC,IAAK,IAAK,IAAK,KAsBhC,OACE,yBAAKC,UAAU,QACZf,GACC,yBAAKe,UAAU,cACb,yBAAKA,UAAU,8BACf,yBAAKA,UAAU,oBAAoBC,IAAKC,IAAMC,IAAI,UAElD,yBAAKH,UAAU,+BACb,wBAAIA,UAAU,qBAAd,qCACA,4BACEA,UAAU,qBACVI,KAAK,SACLC,QAAS,WACPjB,GAAe,GACfF,GAAa,KALjB,WAcLC,GACC,yBAAKa,UAAU,cACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,kBAAkBM,EAAMjB,GAAakB,UACnD,wBAAIP,UAAU,iBACXM,EAAMjB,GAAamB,QAAQC,KAAI,SAACC,EAAQC,GAAT,OAC9B,wBACEX,UAAU,eACVK,QAAS,kBAnDJ,SAACK,EAAQE,GACxBvB,EAAciB,EAAMd,QAAUkB,IAAWE,EACvCvB,IAAgBiB,EAAMd,OAAS,GACjCF,EAAeD,EAAc,GAC7BK,EAAgBD,EAAe,GAC/BK,GAAS,GACTe,YAAW,kBAAMf,GAAS,KAAQ,OAElCJ,EAAgBD,EAAe,GAC/BG,GAAY,GACZR,GAAe,GACfE,EAAe,KAGjBM,GAAY,GACZR,GAAe,GACfE,EAAe,IAmCYwB,CAAaJ,EAAQJ,EAAMjB,GAAauB,UAEvD,0BAAMZ,UAAU,uBAAuBD,EAAQY,IAC9CD,QAKT,wBAAIV,UAAU,gBACTT,IAAOkB,KAAI,SAACM,EAAOJ,GAAR,OACV,wBACEK,IAAKL,EACLX,UAAWiB,IAAW,CACpB,aAAe,EACf,sBAAuBN,IAAUlB,EACjC,wBAAyBkB,EAAQlB,KAGlCsB,OAIRlB,GACC,yBAAKG,UAAU,SACb,yBAAKA,UAAU,eAAeC,IAAKiB,IAAMf,IAAI,cAC7C,wBAAIH,UAAU,gBAAd,WAAsCT,IAAOE,GAA7C,OAMPE,GACC,yBAAKK,UAAU,aACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,mBAAmBC,IAAKC,IAAMC,IAAI,UAEnD,yBAAKH,UAAU,8BACb,wBAAIA,UAAU,oBAAd,gBACA,0BAAMA,UAAU,qBAAqBT,IAAOE,EAAe,IAAM,KAAjE,WACA,4BACEO,UAAU,oBACVI,KAAK,SACLC,QAAS,WACPjB,GAAe,GACfQ,GAAY,GACZF,EAAgBH,IAAOC,OAAO,KANlC,iBC/FG2B,MARf,WACE,OACE,yBAAKnB,UAAU,OACb,kBAAC,EAAD,QCHNoB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.2721fd95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hand.f8c75481.png\";","module.exports = __webpack_public_path__ + \"static/media/done.b9a10378.png\";","import React, { useState } from 'react';\r\nimport ClassNames from 'classnames';\r\nimport './Game.scss';\r\nimport hand from '../images/hand.png';\r\nimport done from '../images/done.png';\r\nimport tasks from '../api/tasks.json';\r\nimport { prizes } from '../api/prizes.json';\r\n\r\nfunction Game() {\r\n  const [gameStart, setGameStart] = useState(true);\r\n  const [gameProcess, setGameProcess] = useState(false);\r\n  const [currentTask, setCurrentTask] = useState(0);\r\n  const [currentPrize, setCurrentPrize] = useState(prizes.length-1);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [popup, setPopup] = useState(false);\r\n  const letters = [\"A\", \"B\", \"C\", \"D\"];\r\n\r\n  const chooseOption = (option, answer) => {\r\n    if (currentTask < tasks.length && option === answer) {\r\n      if (currentTask !== tasks.length - 1) {\r\n        setCurrentTask(currentTask + 1);\r\n        setCurrentPrize(currentPrize - 1);\r\n        setPopup(true);\r\n        setTimeout(() => setPopup(false), 1000)\r\n      } else {\r\n        setCurrentPrize(currentPrize - 1);\r\n        setGameOver(true);\r\n        setGameProcess(false);\r\n        setCurrentTask(0);\r\n      }\r\n    } else {\r\n      setGameOver(true);\r\n      setGameProcess(false);\r\n      setCurrentTask(0);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      {gameStart && (\r\n        <div className=\"game-start\">\r\n          <div className=\"game-start__left-container\">\r\n          <img className=\"game-start__image\" src={hand} alt=\"hand\"></img>\r\n          </div>\r\n          <div className=\"game-start__right-container\">\r\n            <h1 className=\"game-start__title\">Who wants to be aÂ millionaire?</h1>\r\n            <button \r\n              className=\"game-start__button\" \r\n              type=\"button\"\r\n              onClick={() => {\r\n                setGameProcess(true);\r\n                setGameStart(false);\r\n              }}\r\n            >\r\n              Start\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {gameProcess && (\r\n        <div className=\"game__page\">\r\n          <div className=\"game__task\">\r\n            <h2 className=\"game__question\">{tasks[currentTask].question}</h2>\r\n            <ul className=\"game__options\">\r\n              {tasks[currentTask].options.map((option, index) => (\r\n                <li\r\n                  className=\"game__option\"\r\n                  onClick={() => chooseOption(option, tasks[currentTask].answer)}\r\n                >\r\n                  <span className=\"game__option-letter\">{letters[index]}</span>\r\n                  {option}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <ul className=\"game__prizes\">\r\n              {prizes.map((prize, index) => (\r\n                <li \r\n                  key={index}\r\n                  className={ClassNames({\r\n                    \"game__prize\": true,\r\n                    \"game__prize--active\": index === currentPrize,\r\n                    \"game__prize--unactive\": index > currentPrize,\r\n                  })}\r\n                >\r\n                  {prize}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n          {popup && (\r\n            <div className=\"popup\">\r\n              <img className=\"popup__image\" src={done} alt=\"Good job!\" />\r\n              <h1 className=\"popup__title\">You won {prizes[currentPrize]}!</h1>\r\n           </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {gameOver && (\r\n        <div className=\"game-over\">\r\n          <div className=\"game-over__left-container\">\r\n            <img className=\"game-over__image\" src={hand} alt=\"hand\"></img>\r\n          </div>\r\n          <div className=\"game-over__right-container\">\r\n            <h1 className=\"game-over__title\">Total score:</h1>\r\n            <span className=\"game-over__result\">{prizes[currentPrize + 1] || '$0'} earned</span>\r\n            <button \r\n              className=\"game-over__button\" \r\n              type=\"button\"\r\n              onClick={() => {\r\n                setGameProcess(true);\r\n                setGameOver(false);\r\n                setCurrentPrize(prizes.length-1)\r\n              }}\r\n            >\r\n              Try again\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport './App.css';\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}